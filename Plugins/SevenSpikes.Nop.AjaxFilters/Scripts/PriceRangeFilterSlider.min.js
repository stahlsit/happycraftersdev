/*
* Copyright 2012 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
* http://www.nop-templates.com/t/licensinginfo
*/

$(document).ready(function () { var a = parseFloat($("#slider").attr("data-sliderMinValue")), b = parseFloat($("#slider").attr("data-sliderMaxValue")), d = $("#slider").attr("data-selectedFromValue"), e = $("#slider").attr("data-selectedToValue"), c = new PriceRangeFilterManager; $("#slider").slider({ min: a, max: b, range: !0, values: [d, e], slide: c.sliderSlide, stop: c.sliderStopped }); a = $(".priceRangeFilterPanel7Spikes .block .title a.clearPriceRangeFilter"); a.click({ priceRangeFilterManager: c }, c.clearPriceRangeFilter); a.hide() }); function PriceRangeFilterManager() { } PriceRangeFilterManager.prototype.buildPriceRangeFilterModel = buildPriceRangeFilterModel; PriceRangeFilterManager.prototype.SetSliderValues = SetSliderValues; PriceRangeFilterManager.prototype.sliderSlide = sliderSlide; PriceRangeFilterManager.prototype.sliderStopped = sliderStopped; PriceRangeFilterManager.prototype.clearPriceRangeFilter = clearPriceRangeFilter; PriceRangeFilterManager.prototype.clearPriceRangeFilterControl = clearPriceRangeFilterControl; PriceRangeFilterManager.prototype.determineIfPriceRangeHasBeenSelected = determineIfPriceRangeHasBeenSelected; FiltersManager.prototype.buildPriceRangeFilterModel = (new PriceRangeFilterManager).buildPriceRangeFilterModel; FiltersManager.prototype.SetSliderValues = (new PriceRangeFilterManager).SetSliderValues; FiltersManager.prototype.clearPriceRangeFilterControl = (new PriceRangeFilterManager).clearPriceRangeFilterControl; FiltersManager.prototype.determineIfPriceRangeHasBeenSelected = (new PriceRangeFilterManager).determineIfPriceRangeHasBeenSelected; function buildPriceRangeFilterModel(a, b) { var d = parseFloat($("#slider").attr("data-sliderMinValue")), e = parseFloat($("#slider").attr("data-sliderMaxValue")), c = PriceRangeFilterManager.sliderSelectedFromValue, g = PriceRangeFilterManager.sliderSelectedToValue, f = {}; f.CategoryId = a; void 0 != b && b.get(0) == $(".priceRangeFilterPanel7Spikes").get(0) && (f.Priority = 1); var h = {}; void 0 != c && c != d && (h.From = c.toString()); void 0 != g && g != e && (h.To = g.toString()); f.SelectedPriceRange = h; f.MinPrice = d.toString(); f.MaxPrice = e.toString(); return f } function SetSliderValues(a, b) { var d = parseFloat($("#slider").attr("data-sliderMinValue")), e = parseFloat($("#slider").attr("data-sliderMaxValue")), c = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"); if (null == a || null == b) $("#slider").slider("option", "values", [d, e]), PriceRangeFilterManager.sliderSelectedFromValue = d, PriceRangeFilterManager.sliderSelectedToValue = e, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + d.toFixed()), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + e.toFixed()); null == a && null != b && ($("#slider").slider("option", "values", [d, b]), PriceRangeFilterManager.sliderSelectedFromValue = d, PriceRangeFilterManager.sliderSelectedToValue = b, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + d.toFixed()), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + b.toFixed())); null != a && null == b && ($("#slider").slider("option", "values", [a, e]), PriceRangeFilterManager.sliderSelectedFromValue = a, PriceRangeFilterManager.sliderSelectedToValue = e, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + a.toFixed()), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + e.toFixed())); null != a && null != b && ($("#slider").slider("option", "values", [a, b]), PriceRangeFilterManager.sliderSelectedFromValue = a, PriceRangeFilterManager.sliderSelectedToValue = b, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + a.toFixed()), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + b.toFixed())); c = $(".priceRangeFilterPanel7Spikes .block .title a.clearPriceRangeFilter"); a == d && b == e || null == a && null == b ? c.hide() : c.show() } function sliderSlide(a, b) { var d = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"), e = b.values[0], c = b.values[1]; $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(d + e.toFixed()); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(d + c.toFixed()) } function sliderStopped(a, b) { var d = parseFloat($("#slider").attr("data-sliderMinValue")), e = parseFloat($("#slider").attr("data-sliderMaxValue")), c = b.values[0], g = b.values[1]; PriceRangeFilterManager.sliderSelectedFromValue = c; PriceRangeFilterManager.sliderSelectedToValue = g; (new FiltersManager).requestProductsForSelectedFilters($(".priceRangeFilterPanel7Spikes")); var f = $(".priceRangeFilterPanel7Spikes .block .title a.clearPriceRangeFilter"); c == d && g == e ? f.hide() : f.show() } function clearPriceRangeFilter(a) { a.data.priceRangeFilterManager.clearPriceRangeFilterControl(); (new FiltersManager).requestProductsForSelectedFilters($(".priceRangeFilterPanel7Spikes")) } function clearPriceRangeFilterControl() { $(".priceRangeFilterPanel7Spikes .block .title a.clearPriceRangeFilter").hide(); var a = $("#slider").slider("option", "min"), b = $("#slider").slider("option", "max"); $("#slider").slider("option", { values: [a, b] }); var d = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(d + a.toFixed()); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(d + b.toFixed()); PriceRangeFilterManager.sliderSelectedFromValue = a; PriceRangeFilterManager.sliderSelectedToValue = b } function determineIfPriceRangeHasBeenSelected() { var a = $("#slider").slider("option", "min"), b = $("#slider").slider("option", "max"), d = $("#slider").slider("option", "values"); return d[0] != a || d[1] != b ? !0 : !1 };