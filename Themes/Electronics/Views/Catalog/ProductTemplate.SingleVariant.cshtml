@model ProductDetailsModel
@using Nop.Core;
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web;
@using Nop.Web.Framework.UI;
@using Nop.Web.Models.Catalog;
@using SevenSpikes.Theme.Electronics.Models.Catalog;
@using Nop.Web.Extensions;
@using Nop.Core.Domain.Orders;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }
}
@{
    var defaultProductVariant = Model.ProductVariantModels.Count > 0 ? Model.ProductVariantModels[0] : null;

    var electronicsThemeSettings = EngineContext.Current.Resolve<SevenSpikes.Theme.Electronics.Domain.ElectronicsThemePluginsIntegrationSettings>();

    var quickTabsIntegrated = electronicsThemeSettings.IntegrateNopQuickTabs;

    var cloudZoomIntegrated = electronicsThemeSettings.IntegrateNopCloudZoom;
    
}
<div class="product-details-page">
        @Html.Widget("productdetails_top")
    @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
    {        
        <div class="product-essential">
            <div class="product-details-info">

                @Html.Widget("productdetails_before_pictures")

                @if (cloudZoomIntegrated)
                {
                @Html.Action("CloudZoom", "CloudZoom", Model)
                }
                else
                {
                @Html.Partial("_ProductDetailsPictures", Model)
                }

                @Html.Widget("productdetails_after_pictures")

                <div class="overview">

                @Html.Widget("productdetails_overview_top")

                    <h1 class="productname">
                        @Model.Name
                    </h1>
                @if (cloudZoomIntegrated)
                {
                    <div id="cloudZoomWindowElement" style="position: absolute;">
                    </div>
                }

                    @Html.Action("ProductEmailAFriendButton", "Catalog", new { productId = Model.Id })
                    <div class="clear">
                    </div>
                    
                    <!--product SKU, manufacturer part number, stock info-->
                    @Html.Partial("_ProductVariant_SKU_Man_Stock", defaultProductVariant)
                    <div class="clear">
                    </div>
                    <!--Back in stock subscription-->
                    @Html.Partial("_ProductVariantBackInStockSubscription", defaultProductVariant)
                    <div class="clear">
                    </div>

                    @Html.Action("ProductReviewOverview", "Catalog", new { productId = Model.Id })

                    <ul class="add-to-links">
                        @if (!defaultProductVariant.AddToCart.DisableWishlistButton)
                        {
                            <li>
                                <input type="submit" name="addtowishlistbutton-@(defaultProductVariant.AddToCart.ProductVariantId)" class="add-to-wishlist-link" value="@T("ShoppingCart.AddToWishlist")" onclick="AjaxCart.addproductvarianttocart('@Url.RouteUrl("AddProductVariantToCart", new { productVariantId = defaultProductVariant.AddToCart.ProductVariantId, shoppingCartTypeId = (int)ShoppingCartType.Wishlist })', '#product-details-form');return false;" />
                            </li>
                        }
                        @Html.Action("CompareProductsButton", "Catalog", new { productId = Model.Id })
                    </ul>
                    <div class="shortdescription">
                        <h2>
                            @T("SevenSpikes.Themes.Electronics.ProductDetails.QuickOverview")</h2>
                        @Html.Raw(Model.ShortDescription)
                    </div>
                    <div class="clear">
                    </div>
                    <!--sample download-->
                    @Html.Partial("_DownloadSample", defaultProductVariant)
                    <div class="clear">
                    </div>
                    @{
                        var dataDictAttributes = new ViewDataDictionary();
                        dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", defaultProductVariant.Id);
                        @Html.Partial("_ProductAttributes", defaultProductVariant.ProductVariantAttributes, dataDictAttributes)
                    }
                    <div class="product-options-bottom">
                        @{
                        var dataDictPriceBottom = new ViewDataDictionary();
                        dataDictPriceBottom.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", defaultProductVariant.Id);
                            @Html.Partial("_ProductVariantPrice", defaultProductVariant.ProductVariantPrice, dataDictPriceBottom)
                            
                        var dataDictAddToCart = new ViewDataDictionary();
                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", defaultProductVariant.Id);
                            @Html.Partial("_ProductVariantAddToCart", defaultProductVariant.AddToCart, dataDictAddToCart)                    
                        }
                    </div>
                    <br />
                    @Html.Action("ShareButton", "Catalog")
                    @Html.Widget("productdetails_overview_bottom")
                </div>
                <div class="clear">
                </div>
            </div>
        </div>
        <div class="clear">
        </div>
        <div class="product-collateral">
            @if (quickTabsIntegrated)
            {
                @Html.Action("ProductTabs", "ProductTab") 
            }

            @if (!quickTabsIntegrated)
            {
            <div class="tabhead">
                <h3>
                    @T("SevenSpikes.Themes.Electronics.ProductDetails.Description")</h3>
            </div>
            <div class="tabinfo">
                <div class="fulldescription">
                    @Html.Raw(Model.FullDescription)
                </div>
            </div>
            }
            <div>
                @Html.Action("RelatedProducts", "Catalog", new { productId = Model.Id })
            </div>
            <div class="tabhead">
                <h3>
                    @T("SevenSpikes.Themes.Electronics.ProductDetails.AdditionalInfo")</h3>
            </div>
            <div class="tabinfo">
                <!--product manufactures-->
                @Html.Action("ProductManufacturers", "Catalog", new { productId = Model.Id })
                <div class="clear">
                </div>
                <div class="product-variant-line">
                    <!--product tier prices-->
                    @Html.Action("ProductTierPrices", "Catalog", new { productVariantId = defaultProductVariant.Id })
                    <div class="clear">
                    </div>
                    @{
            var dataDictGiftCard = new ViewDataDictionary();
            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                        @Html.Partial("_GiftCardInfo", defaultProductVariant.GiftCard, dataDictGiftCard)
                    }
                </div>
                @if (!quickTabsIntegrated)
                {
                <div>
                    @Html.Action("ProductSpecifications", "Catalog", new { productId = Model.Id })
                </div>
                }
            </div>
            <div>
                @Html.Action("ProductsAlsoPurchased", "Catalog", new { productId = Model.Id })
            </div>
            <div>
                @Html.Action("ProductTags", "Catalog", new { productId = Model.Id })
            </div>
        </div>
    }
        @Html.Widget("productdetails_bottom")
</div>
